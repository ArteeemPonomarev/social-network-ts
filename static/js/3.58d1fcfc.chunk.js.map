{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","style","dialog","to","id","activeClassName","active","name","Message","message","maxLength50","maxLength","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","addMessage","newMessageBody","compose","connect","state","isAuth","auth","dialogsActions","withAuthRedirect"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,6FCQtMC,EAAY,SAACC,GACtB,OACI,qBAAKC,UAAWC,IAAMC,OAAtB,SACI,cAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAKC,gBAAiBJ,IAAMK,OAA7D,SACKP,EAAMQ,UCLVC,EAAU,SAACT,GACpB,OACI,qBAAKC,UAAWC,IAAMQ,QAAtB,SAAgCV,EAAMU,W,kCCUxCC,EAAcC,YAAU,IAiBxBC,EAAsBC,YAAkC,CAC1DC,KAAM,eADkBD,EAfgD,SAACd,GACzE,OACI,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXZ,KAAM,iBACNa,SAAU,CAACC,IAAUX,GACrBY,YAAa,yBACjB,8BACI,yDAmCDC,EAxBC,SAACxB,GAEb,IAAMyB,EAAkBzB,EAAM0B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMH,GAAIwB,EAAExB,IAASwB,EAAExB,OAChGyB,EAAmB9B,EAAM0B,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAASL,GAAI2B,EAAE3B,IAAS2B,EAAE3B,OAO3G,OACI,sBAAKJ,UAAWC,IAAMyB,QAAtB,UACI,qBAAK1B,UAAWC,IAAM+B,aAAtB,SACKR,IAEL,sBAAKxB,UAAWC,IAAM6B,SAAtB,UACKD,EACD,cAACjB,EAAD,CAAqBG,SAZd,SAACkB,GAChBlC,EAAMmC,WAAWD,EAAOE,0B,yBC5BjBC,sBACXC,aARoB,SAACC,GACrB,MAAO,CACHb,YAAaa,EAAMb,YACnBc,OAAQD,EAAME,KAAKD,UAKE,CACrBL,WAAYO,IAAeP,aAE/BQ,IAJWN,CAKbb","file":"static/js/3.58d1fcfc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1zfh5\",\"dialogsItems\":\"Dialogs_dialogsItems__37WZO\",\"dialog\":\"Dialogs_dialog__-mHYM\",\"active\":\"Dialogs_active__FJRL1\",\"messages\":\"Dialogs_messages__201Uc\",\"message\":\"Dialogs_message__R6jAz\"};","import React from 'react';\r\nimport style from '../../Dialogs/Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype DialogItemPropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport const DialogItem= (props:DialogItemPropsType) => {\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id}  activeClassName={style.active}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport style from '../../Dialogs/Dialogs.module.css';\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n    id: number\r\n}\r\n\r\nexport const Message = (props:MessagePropsType) => {\r\n    return (\r\n        <div className={style.message}>{props.message}</div>\r\n    )\r\n}","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {Message} from './Message/Message';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {Textarea} from '../common/FormsControls/FormsControls';\r\nimport {maxLength, required} from '../../utils/validators/validators';\r\nimport {InitialDialogsStateType} from \"../../redux/dialogs-reducer\";\r\n\r\n\r\ntype DialogsPropsType = {\r\n    dialogsPage: InitialDialogsStateType\r\n    addMessage: (newMessageBody: string) => void\r\n    isAuth: boolean\r\n};\r\n\r\ntype AddMessageFormDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength50 = maxLength(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<AddMessageFormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name={\"newMessageBody\"}\r\n                validate={[required, maxLength50]}\r\n                placeholder={\"Type your message...\"}/>\r\n            <div>\r\n                <button>Add Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<AddMessageFormDataType>({\r\n    form: 'messageForm'\r\n})(AddMessageForm)\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>);\r\n    const messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} id={m.id} key={m.id}/>);\r\n\r\n    const addMessage = (values: AddMessageFormDataType) => {\r\n        props.addMessage(values.newMessageBody)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <AddMessageFormRedux onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {dialogsActions, InitialDialogsStateType} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: InitialDialogsStateType\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        addMessage: dialogsActions.addMessage\r\n    }),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}